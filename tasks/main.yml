---
- name: Create minio user
  ansible.builtin.user:
    name: 'minio'
    shell: /sbin/nologin

- name: Check if minio service exists
  stat: path=/etc/systemd/system/minio.service
  register: minio_service_status

- name: Stop service minio
  ansible.builtin.systemd:
    name: minio
    state: stopped
  when: minio_service_status.stat.exists

- name: Download MinIO server executable
  ansible.builtin.get_url:
    url: https://dl.min.io/server/minio/release/linux-amd64/minio
    dest: /usr/local/bin/minio
    mode: 0755
    force: true

- name: Create /etc/minio directory
  ansible.builtin.file:
    dest: /etc/minio
    state: directory
    owner: minio
    group: minio
    mode: 0755

- name: Copy /etc/default/minio configuration
  ansible.builtin.template:
    src: minio.j2
    dest: /etc/default/minio
    owner: root
    group: root
    mode: 0640

- name: Create /usr/local/share/minio directory
  ansible.builtin.file:
    dest: /usr/local/share/minio
    state: directory
    owner: minio
    group: minio
    mode: 0750

- name: Copy minio.service configuration
  ansible.builtin.copy:
    src: minio.service
    dest: /etc/systemd/system/minio.service
    owner: root
    group: root
    mode: 0755

- name: Force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Enable service minio
  ansible.builtin.systemd:
    name: minio
    enabled: yes

- name: Start service minio
  ansible.builtin.systemd:
    name: minio
    state: started

- name: Download MinIO client executable
  ansible.builtin.get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: 0755
    force: true

- name: Configure MinIO host for MinIO client
  ansible.builtin.shell: mc config host add minio {{ minio_api_scheme }}://{{ minio_api_address }}:{{ minio_api_port }}/ {{ minio_root_user }} {{ minio_root_password }}

- name: Create MinIO user
  ansible.builtin.shell: mc admin user add minio {{ item['username'] }} {{ item['password'] }}
  loop: '{{ minio_users }}'

- name: Create MinIO bucket
  ansible.builtin.shell: mc mb minio/{{ item['name'] }} --ignore-existing
  loop: '{{ minio_buckets }}'

- name: Create temporary MinIO folder
  ansible.builtin.file:
    dest: /tmp/minio
    state: directory
    owner: minio
    group: minio
    mode: 0755

- name: Create policy file
  ansible.builtin.template:
    src: policies/{{ item['type'] }}.j2
    dest: /tmp/minio/{{ item['user'] }}-{{ item['bucket'] }}.json
    owner: minio
    group: minio
    mode: 0740
  loop: '{{ minio_policies }}'

- name: Create MinIO policy
  ansible.builtin.shell: mc admin policy create minio {{ item['user'] }}-{{ item['bucket'] }} /tmp/minio/{{ item['user'] }}-{{ item['bucket'] }}.json
  loop: '{{ minio_policies }}'

- name: Attach MinIO user to policy
  ansible.builtin.shell: mc admin policy attach minio {{ item['bucket'] }} --user {{ item['user'] }}
  loop: '{{ minio_policies }}'

- name: Delete temporary policies folder
  ansible.builtin.file:
    dest: /tmp/minio
    state: absent
